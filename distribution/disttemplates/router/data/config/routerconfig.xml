<?xml version="1.0" encoding="UTF-8"?>

<router name="router" kernelpath="../kernel" release="${release}" startorder="sys$log sys$authentication sys$threadpool sys$timer sys$net sys$store sys$queuemanager sys$topicmanager sys$mgmt sys$xa sys$routing sys$jndi sys$jms sys$amqp sys$mqtt sys$deploy sys$scheduler sys$streams">

  <!--  AMQP Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$amqp">
    <declarations>
      <connection-templates>
        <connection-template name="ssl" socketfactory-class="com.swiftmq.net.JSSESocketFactory"/>
      </connection-templates>
      <transformer>
        <default-inbound-transformers>
          <default-inbound-transformer name="0">
            <properties/>
          </default-inbound-transformer>
        </default-inbound-transformers>
        <default-outbound-transformers>
          <default-outbound-transformer name="0">
            <properties/>
          </default-outbound-transformer>
        </default-outbound-transformers>
        <destination-transformers/>
      </transformer>
    </declarations>
    <listeners>
      <listener name="amqp">
        <host-access-list/>
      </listener>
    </listeners>
  </swiftlet>

  <!--  Authentication Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$authentication">
    <groups>
      <group name="admin">
        <queue-grants>
          <queue-grant name="swiftmqmgmt" browse-grant="false" receive-grant="false"/>
        </queue-grants>
        <topic-grants/>
      </group>
      <group name="public">
        <queue-grants>
          <queue-grant name="testqueue"/>
        </queue-grants>
        <topic-grants>
          <topic-grant name="swiftmq.jndi" durable-grant="false" subscribe-grant="false"/>
          <topic-grant name="testtopic"/>
        </topic-grants>
      </group>
    </groups>
    <resource-limit-groups>
      <resource-limit-group name="public"/>
    </resource-limit-groups>
    <users>
      <user name="admin" group="admin" password="secret">
        <host-access-list/>
      </user>
    </users>
  </swiftlet>

  <!--  Deploy Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$deploy">
    <deploy-spaces>
      <deploy-space name="extension-swiftlets" path="../data/deploy"/>
    </deploy-spaces>
  </swiftlet>

  <!--  JMS Application Container Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$jac">
    <static-containers/>
  </swiftlet>

  <!--  JMS Swiftlet (XAASF), Release: ${release}  -->

  <swiftlet name="sys$jms">
    <intravm-connection-factories>
      <intravm-connection-factory name="IVMConnectionFactory"/>
      <intravm-connection-factory name="IVMQueueConnectionFactory"/>
      <intravm-connection-factory name="IVMTopicConnectionFactory"/>
    </intravm-connection-factories>
    <listeners>
      <listener name="plainsocket" port="4001">
        <connection-factories>
          <connection-factory name="ConnectionFactory"/>
          <connection-factory name="QueueConnectionFactory"/>
          <connection-factory name="TopicConnectionFactory"/>
        </connection-factories>
        <host-access-list/>
      </listener>
    </listeners>
  </swiftlet>

  <!--  JNDI Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$jndi">
    <aliases>
    </aliases>
    <jndi-replications/>
    <remote-queues/>
  </swiftlet>

  <!--  Log Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$log" logfile-error="../data/log/error.log" logfile-info="../data/log/info.log"
            logfile-warning="../data/log/warning.log" logsink-directory="../data/log"/>

  <!--  Management Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$mgmt">
    <jmx>
      <mbean-server/>
    </jmx>
    <message-interface/>
    <roles>
    </roles>
  </swiftlet>

  <!--  MQTT Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$mqtt">
    <declarations>
      <connection-templates>
        <connection-template name="default"/>
        <connection-template name="tls" socketfactory-class="com.swiftmq.net.JSSESocketFactory"/>
      </connection-templates>
    </declarations>
    <listeners>
      <listener name="mqtt">
        <host-access-list/>
      </listener>
    </listeners>
  </swiftlet>

  <!--  Network Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$net">
    <multicast/>
  </swiftlet>

  <!--  Queue Manager Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$queuemanager">
    <clustered-queues/>
    <composite-queues/>
    <queue-controllers>
      <queue-controller name="01" persistence-mode="non_persistent" predicate="tmp$%"/>
      <queue-controller name="02" predicate="sys$%"/>
      <queue-controller name="03" predicate="swiftmq%"/>
      <queue-controller name="04" predicate="rt$%"/>
      <queue-controller name="05" predicate="unroutable"/>
      <queue-controller name="06" predicate="%$%"/>
      <queue-controller name="07" predicate="routerdlq"/>
      <queue-controller name="08" predicate="%"/>
    </queue-controllers>
    <queues>
      <queue name="testqueue"/>
    </queues>
  </swiftlet>

  <!--  Routing Swiftlet (Unlimited Connections), Release: ${release}  -->

  <swiftlet name="sys$routing">
    <connectors/>
    <filters/>
    <listeners>
      <listener name="plainsocket" port="4100">
        <host-access-list/>
      </listener>
    </listeners>
  </swiftlet>

  <!--  Scheduler Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$scheduler">
    <calendars/>
    <schedules/>
  </swiftlet>

  <!--  Store Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$store">
    <backup path="../data/store/backup"/>
    <cache/>
    <database path="../data/store/db"/>
    <durable-subscriber path="../data/store/durables"/>
    <swap path="../data/store/swap"/>
    <transaction-log force-sync="false" path="../data/store/log"/>
  </swiftlet>

  <!--  Streams Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$streams">
    <domains>
      <domain name="swiftmq">
        <packages>
          <package name="mail">
            <streams>
              <stream name="mailout" script-file="../streams/mailout.js">
                <dependencies/>
                <parameters>
                  <parameter name="default-from" value="default from address"/>
                  <parameter name="default-to" value="default to address (your admin)"/>
                  <parameter name="password" value="mailserver password"/>
                  <parameter name="servername" value="mailserver hostname"/>
                  <parameter name="username" value="mailserver username"/>
                </parameters>
              </stream>
            </streams>
          </package>
          <package name="scheduler">
            <streams>
              <stream name="messagescheduler" enabled="true" script-file="../streams/messagescheduler.js">
                <dependencies/>
                <parameters/>
              </stream>
            </streams>
          </package>
          <package name="system">
            <streams>
              <stream name="routeannouncer" enabled="true" script-file="../streams/routeannouncer.js">
                <dependencies>
                  <dependency name="swiftmq.system.streamrepository"/>
                </dependencies>
                <parameters/>
              </stream>
              <stream name="streammonitor" script-file="../streams/streammonitor.js">
                <dependencies>
                  <dependency name="swiftmq.system.streamregistry"/>
                </dependencies>
                <parameters/>
              </stream>
              <stream name="streamregistry" enabled="true" script-file="../streams/streamregistry.js">
                <dependencies>
                  <dependency name="swiftmq.system.routeannouncer"/>
                </dependencies>
                <parameters/>
              </stream>
              <stream name="streamrepository" enabled="true" script-file="../streams/streamrepository.js">
                <dependencies/>
                <parameters/>
              </stream>
            </streams>
          </package>
        </packages>
      </domain>
    </domains>
  </swiftlet>

  <!--  Threadpool Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$threadpool" group-shutdown-order="default network processing store">
    <groups>
      <group name="network">
        <eventloops>
          <eventloop name="sys$jms.connection.inbound" virtual="true"/>
          <eventloop name="sys$jms.connection.outbound" virtual="true"/>
        </eventloops>
      </group>
      <group name="processing">
        <eventloops>
          <eventloop name="sys$jms.session" virtual="true"/>
        </eventloops>
      </group>
      <group name="store">
        <eventloops>
          <eventloop name="sys$store.log"/>
        </eventloops>
      </group>
    </groups>
    <pools>
      <pool name="amqp.connection" kernel-pool="true" max-threads="5" min-threads="1">
        <threads>
          <thread name="sys$amqp.connection.service"/>
        </threads>
      </pool>
      <pool name="amqp.session" kernel-pool="true" max-threads="10" min-threads="1">
        <threads>
          <thread name="sys$amqp.sasl.service"/>
          <thread name="sys$amqp.session.service"/>
        </threads>
      </pool>
      <pool name="jndi" kernel-pool="true" max-threads="1" min-threads="1">
        <threads>
          <thread name="sys$jndi.listener"/>
        </threads>
      </pool>
      <pool name="mgmt" kernel-pool="true" max-threads="2">
        <threads>
          <thread name="sys$mgmt.%"/>
        </threads>
      </pool>
      <pool name="mqtt.connection" kernel-pool="true" max-threads="10">
        <threads>
          <thread name="sys$mqtt.connection.service"/>
        </threads>
      </pool>
      <pool name="routing.connection.mgr" kernel-pool="true" max-threads="1">
        <threads>
          <thread name="sys$routing.connection.mgr"/>
        </threads>
      </pool>
      <pool name="routing.exchanger" kernel-pool="true" max-threads="1">
        <threads>
          <thread name="sys$routing.route.exchanger"/>
        </threads>
      </pool>
      <pool name="routing.scheduler" kernel-pool="true" max-threads="3" min-threads="3">
        <threads>
          <thread name="sys$routing.scheduler"/>
        </threads>
      </pool>
      <pool name="routing.service" kernel-pool="true" max-threads="3" min-threads="3">
        <threads>
          <thread name="sys$routing.connection.service"/>
        </threads>
      </pool>
      <pool name="routing.throttle" kernel-pool="true" max-threads="3" min-threads="3">
        <threads>
          <thread name="sys$routing.connection.throttlequeue"/>
        </threads>
      </pool>
      <pool name="scheduler.job" kernel-pool="true">
        <threads>
          <thread name="sys$scheduler.runner"/>
        </threads>
      </pool>
      <pool name="scheduler.system" kernel-pool="true" max-threads="2">
        <threads>
          <thread name="sys$scheduler.requestprocessor"/>
          <thread name="sys$scheduler.scheduler"/>
        </threads>
      </pool>
      <pool name="topic" kernel-pool="true" max-threads="2">
        <threads>
          <thread name="sys$topicmanager.topic.%"/>
        </threads>
      </pool>
    </pools>
  </swiftlet>

  <!--  Timer Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$timer"/>

  <!--  Topic Manager Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$topicmanager">
    <slow-subscriber-conditions/>
    <static-remote-router-subscriptions/>
    <topics>
      <topic name="testtopic"/>
    </topics>
  </swiftlet>

  <!--  Trace Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$trace">
    <spaces>
      <space name="kernel">
        <predicates>
          <predicate name="0" filename="../data/trace/manager.trace" value="%Manager"/>
          <predicate name="1" filename="../data/trace/net.trace" value="sys$net"/>
          <predicate name="10" filename="../data/trace/auth.trace" value="sys$auth%"/>
          <predicate name="11" filename="../data/trace/mgmt.trace" value="sys$mgmt%"/>
          <predicate name="12" filename="../data/trace/store.trace" value="sys$store"/>
          <predicate name="13" filename="../data/trace/xa.trace" value="sys$xa"/>
          <predicate name="15" filename="../data/trace/timer.trace" value="sys$timer"/>
          <predicate name="16" filename="../data/trace/scheduler.trace" value="sys$scheduler"/>
          <predicate name="17" filename="../data/trace/monitor.trace" value="sys$monitor"/>
          <predicate name="19" filename="../data/trace/amqp.trace" value="sys$amqp"/>
          <predicate name="2" filename="../data/trace/jms.trace" value="sys$jms"/>
          <predicate name="21" filename="../data/trace/streams.trace" value="sys$streams"/>
          <predicate name="22" filename="../data/trace/mqtt.trace" value="sys$mqtt"/>
          <predicate name="3" filename="../data/trace/deploy.trace" value="sys$deploy"/>
          <predicate name="4" filename="../data/trace/thread.trace" value="sys$thread%"/>
          <predicate name="5" filename="../data/trace/routing.trace" value="sys$rout%"/>
          <predicate name="6" filename="../data/trace/queuemanager.trace" value="sys$queue%"/>
          <predicate name="7" filename="../data/trace/topic.trace" value="sys$topic%"/>
          <predicate name="9" filename="../data/trace/jndi.trace" value="sys$jndi"/>
        </predicates>
      </space>
      <space name="protocol">
        <predicates>
          <predicate name="1" filename="../data/trace/protocol.trace" value="%"/>
        </predicates>
      </space>
      <space name="queue">
        <predicates>
          <predicate name="1" filename="../data/trace/queue.trace" value="%"/>
        </predicates>
      </space>
      <space name="swiftlet">
        <predicates>
          <predicate name="1" filename="../data/trace/swiftlet.trace" value="%"/>
        </predicates>
      </space>
    </spaces>
  </swiftlet>

  <!--  XA Resource Manager Swiftlet, Release: ${release}  -->

  <swiftlet name="sys$xa"/>
</router>
