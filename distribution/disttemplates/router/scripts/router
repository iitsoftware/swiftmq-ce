#!/bin/bash
cd ..
SWIFTMQ_HOME=$(pwd)
OSNAME=$(uname)
cd scripts
if [ "$SWIFTMQ_IN_DOCKER" != "true" ] && [ ! -f ./.executables ]; then
    if [[ "$OSNAME" == "Darwin" ]]; then
        echo $SWIFTMQ_HOME/graalvm-jdk/Contents/Home > .javahome
        echo $SWIFTMQ_HOME/graalvm-jdk/Contents/Home/bin > .executables
        echo
        echo "Please enter the sudo password to remove the quarantine attributes"
        echo "from the bundled GraalVM CE Java installation."
        echo
        sudo xattr -r -d com.apple.quarantine $SWIFTMQ_HOME/graalvm-jdk/Contents/Home
    else
        echo $SWIFTMQ_HOME/graalvm-jdk > .javahome
        echo $SWIFTMQ_HOME/graalvm-jdk/bin > .executables
    fi
fi
JAVAHOME=$(cat .javahome)
EXECUTABLES=$(cat .executables)
CLASSP="../jars/swiftmq.jar:../graalvm/*"
OPENS="--add-opens=java.desktop/java.awt.font=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED  --add-opens=java.base/sun.net.dns=ALL-UNNAMED $SWIFTMQ_JVMOPENS"
PRECONFIG="$("$EXECUTABLES"/java -cp "$CLASSP" com.swiftmq.SystemPreconfig)"
if [ "$1" != "" ]
then
  PRECONFIG="$PRECONFIG,$1"
  shift
fi
ROUTEROPT="$OPENS -Dswiftmq.preconfig=$PRECONFIG -Dswiftmq.directory.autocreate=true -Djavax.net.ssl.keyStore=../certs/server.keystore -Djavax.net.ssl.keyStorePassword=secret -Djavax.net.ssl.trustStore=../certs/client.truststore -Djavax.net.ssl.trustStorePassword=secret"

if [[ ! -e ../certs/.certimported ]]; then
   CACERTS="$JAVAHOME/lib/security/cacerts"
   echo "Import keystore: $CACERTS"
   keytool -importkeystore -srckeystore $CACERTS -srcstorepass changeit -destkeystore ../certs/client.truststore -deststorepass secret  >/dev/null 2>/dev/null
   touch ../certs/.certimported
fi

JVMPARAM="-Xmx2G"
if [ "$SWIFTMQ_JVMPARAM" != "" ]; then
  JVMPARAM="$SWIFTMQ_JVMPARAM"
fi

if [ "${proxyhost}" != "" ] && [ "${proxyport}" != "" ]
then
  echo "Setting http/s proxy to ${proxyhost}:${proxyport}"
  PROXY="-Dhttp.proxyHost=${proxyhost} -Dhttp.proxyPort=${proxyport} -Dhttps.proxyHost=${proxyhost} -Dhttps.proxyPort=${proxyport}"
fi

echo "Starting SwiftMQ with '$JVMPARAM' heap size on bundled GraalVM CE."
echo "Please have a look at data/log/stdout.log ..."
exec ${EXECUTABLES}/java -server $JVMPARAM $ROUTEROPT $PROXY -cp $CLASSP com.swiftmq.Router ../data/config/routerconfig.xml >../data/log/stdout.log 2>../data/log/stderr.log
